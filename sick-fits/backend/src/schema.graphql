"""
This file is our public facing api, that interfaces with our javascript: Contains all of our queries (Query.js) and resolvers (Mutation.js). Cannot be left empty and since it's being referred to in the function createServer we need to define the resolvers of Mutation and Query
* GRAPHQL NOTE: Creating a new type for a response message
# import * from './generated/prisma.graphql'
"""
type SuccessMessage {
  message: String
}

type Mutation {
  # CREATE
  # TODO: Add multiple images to items
  createItem(
    title: String
    description: String
    price: Int
    image: String
    largeImage: String
  ): Item!
  signup(email: String!, password: String!, name: String!): User!

  #READ
  signin(email: String!, password: String!): User!
  signout: SuccessMessage

  # UPDATE
  # TODO: Add image reupload and multiple images
  updateItem(id: ID!, title: String, description: String, price: Int): Item!
  resetRequest(email: String!): SuccessMessage
  resetPassword(
    resetToken: String!
    password: String!
    confirmPassword: String!
  ): User!

  # DELETE
  deleteItem(id: ID!): Item
}

# READ - All of our specific Read Schemas
type Query {
  items(
    where: ItemWhereInput
    orderBy: ItemOrderByInput
    skip: Int
    first: Int
  ): [Item]!
  item(where: ItemWhereUniqueInput!): Item
  itemsConnection(where: ItemWhereInput): ItemConnection!
  me: User
}

# ! Don't forget to include permissions, left out its a big security issue since users would be allowed to their own permissions in essence.
type User {
  id: ID!
  name: String!
  email: String!
  permissions: [Permission!]!
}
